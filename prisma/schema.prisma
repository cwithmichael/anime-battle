generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model battle {
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  item_one_id    String
  item_one_votes Int?      @default(0)
  item_two_id    String
  item_two_votes Int?      @default(0)

  @@id([item_one_id, item_two_id])
}

model item {
  id         Int       @id
  origin     String?   @db.VarChar(255)
  image      String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  first_name String?   @db.VarChar(255)
  last_name  String?   @db.VarChar(255)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
